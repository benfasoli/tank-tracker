rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function userRoleIn(array) {
      return isSignedIn() && getUserRole() in array;
    }
  
    match /{document=**} {
    	allow create: if userRoleIn(["read+write", "read+write+admin"]);
      allow write: if userRoleIn(["read+write+admin"]);
      allow read: if userRoleIn(["read", "read+write", "read+write+admin"]);
    }
    
    match /users/{uid} {
    	allow write: if userRoleIn(["read+write+admin"]);
      allow update: if isSignedIn() && request.auth.uid == uid && request.resource.data.keys().hasOnly(['displayName', 'email', 'photoURL']);
      allow create: if isSignedIn() && request.auth.uid == uid && request.resource.data.keys().hasOnly(['displayName', 'email', 'photoURL']);
    }
    
    match /tanks/{tankId} {
    	allow create, update: if userRoleIn(["read+write", "read+write+admin"]);
      
      match /history/{tankRecordId} {
      	allow update: if userRoleIn(["read+write+admin"]);
      }
    }
  }
}